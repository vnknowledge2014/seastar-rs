# Rust/Cargo build artifacts
/target/
**/target/
Cargo.lock

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk
*.pdb

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# MacOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# IDEs and Editors
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.swp
*.swo
*~
.idea/
*.iml
*.ipr
*.iws
.project
.metadata
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace
*.sublime-project

# Vim
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]
Session.vim
Sessionx.vim
.netrwhist
*~
tags
[._]*.un~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws
out/
.idea_modules/

# Logs and databases
*.log
*.sql
*.sqlite
*.sqlite3
*.db

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov
.nyc_output

# Test artifacts
test-results/
test-output/
*.profraw

# Benchmarking results
criterion/
bench_results/
flamegraph.svg
perf.data*

# Documentation build
book/
mdbook/

# Temporary files
*.tmp
*.temp
*.bak
*.swp
*.swo

# Build and dist directories
build/
dist/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Package manager files
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python (if using Python tools)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

# Docker
.dockerignore

# Kubernetes
*.kubeconfig

# Certificates and keys (security)
*.pem
*.key
*.crt
*.p12
*.pfx
*.jks
*.keystore
*.truststore

# Configuration files with secrets
config/secrets.toml
config/secrets.yaml
config/secrets.json
*.secret
secrets/

# Seastar-RS specific
# Validation reports
validation_report_*.md
validation_report_*.html

# Performance test results
perf_results/
benchmark_results/
flamegraphs/

# Memory dumps and core files
core.*
*.dmp
heap.prof
cpu.prof

# Temporary build artifacts
*.rlib
*.rmeta

# Generated protocol files
*.pb.rs
*_pb.rs

# FFI generated files
bindings.rs

# Local development tools
.local/
dev-tools/

# Editor backup files
*~
*.orig
*.rej

# OS generated files
.fuse_hidden*
.directory
.Trash-*

# Network debugging
*.pcap
*.pcapng

# Profiling data
*.prof
*.profdata
callgrind.out.*
massif.out.*

# Documentation artifacts
doc/
docs/_build/
site/

# Local configuration overrides
local.toml
local.yaml
local.json
.local.env

# IDE workspace files
*.code-workspace

# Rust analyzer
.rust-analyzer/

# cargo-make
Makefile.toml.bak

# wasm-pack build artifacts
pkg/

# AI
.claude
.serena
CLAUDE.md
